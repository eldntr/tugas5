name: Build and Deploy to Kubernetes

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Langkah 1: Checkout repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Langkah 2: Setup Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Langkah 4: Build Docker image
    - name: Build Docker image
      run: |
        IMAGE_TAG=${{ github.sha }}
        docker build -t nginx-rtmp-server:${IMAGE_TAG} -f platform/Dockerfile .

    # Langkah 5: Setup Kind
    - name: Set up Kind
      uses: engineerd/setup-kind@v0.5.0
      with:
        version: v0.11.1

    # Langkah 6: Load Docker image ke kluster Kind
    - name: Load Docker image into Kind
      run: |
        IMAGE_TAG=${{ github.sha }}
        kind load docker-image nginx-rtmp-server:${IMAGE_TAG}

    # Langkah 7: Terapkan file manifest Kubernetes
    - name: Apply Kubernetes manifests
      run: |
        kubectl apply -f kubernetes/deployment.yaml

    # Langkah 8: Update deployment Kubernetes dengan image baru
    - name: Update Kubernetes deployment
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      run: |
        if [ -z "${KUBE_CONFIG_DATA}" ]; then
          echo "KUBE_CONFIG_DATA is not set"
          exit 1
        fi
        echo "${KUBE_CONFIG_DATA}" | base64 --decode > $HOME/.kube/config
        kubectl config view
        IMAGE_TAG=${{ github.sha }}
        kubectl set image deployment/nginx-rtmp-server nginx-rtmp-server=nginx-rtmp-server:${IMAGE_TAG} --record
        kubectl rollout status deployment/nginx-rtmp-server || kubectl logs deployment/nginx-rtmp-server